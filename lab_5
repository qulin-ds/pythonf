def gen_bin_tree(
    height: int,
    root: int,
    left_branch=lambda x: x * 2 + 1,
    right_branch=lambda x: 2 * x - 1
) -> list:
    """
    Создаёт бинарное дерево заданной высоты без рекурсии.

    Каждый узел представлен в виде списка:
    [значение, левый_потомок, правый_потомок]

    Потомки вычисляются с помощью переданных функций:
        left_branch(value)
        right_branch(value)

    По умолчанию:
        left_branch = lambda x: x * 2 + 1
        right_branch = lambda x: 2 * x - 1

    Пустые ветви обозначаются пустыми списками [].

    :param height: высота дерева (количество уровней)
    :param root: значение в корне дерева
    :param left_branch: формула для вычисления левого потомка
    :param right_branch: формула для вычисления правого потомка

    Пример:
        >>> gen_bin_tree(3, 9)
        [9, [19, [39, [], []], [37, [], []]],
            [17, [35, [], []], [33, [], []]]]
    """

    if height < 1:
        return []

    tree = [root, [], []]

    current_level = [tree]
    level = 1

    while level < height:
        next_level = []
        for node in current_level:
            left_value = left_branch(node[0])
            right_value = right_branch(node[0])

            left_node = [left_value, [], []]
            right_node = [right_value, [], []]

            node[1] = left_node
            node[2] = right_node

            next_level.append(left_node)
            next_level.append(right_node)

        current_level = next_level
        level += 1

    return tree

tree = gen_bin_tree(
